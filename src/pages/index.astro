---
import probe from 'probe-image-size';
import { fetchItems } from '../api/fetchItems';
import { fetchSiteContent } from '../api/fetchSiteContent';
import '/src/styles/global.css';
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon/components';
import Popover from '../components/Popover.astro';
import { LinkPreview } from 'astro-embed';

const items = await fetchItems();
const siteContent = await fetchSiteContent();
const categories = [
  ...new Set(items.map((item) => item.category).filter(Boolean)),
];

const today = new Date();

const gallery = await Promise.all(
  items.map(async (item) => {
    const sizes = await Promise.all(item.images.map((img) => probe(img)));
    return { images: item.images, sizes };
  }),
);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link
      rel="icon"
      type="image/svg+xml"
      href="/house-sale-sheets/favicon.svg"
    />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{siteContent.siteTitle} - Quality Furniture & Items</title>
    <style>
      html {
        scroll-behavior: smooth;
      }
    </style>
  </head>
  <body class="bg-gray-50 min-h-screen">
    <!-- Header -->
    <header class="bg-white shadow-sm sticky top-0 z-50">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between items-center py-4">
          <div class="flex items-center space-x-2">
            <Icon
              name="mdi:home"
              class="w-8 h-8 text-blue-800"
              fill="currentColor"
            />

            <h1 class="text-2xl font-bold text-gray-900">
              {siteContent.siteTitle}
            </h1>
          </div>
          <div class="flex items-center space-x-4">
            <button
              id="audioToggle"
              class="px-4 py-2 rounded-lg transition-colors flex items-center space-x-2 bg-red-600 text-white font-medium hover:bg-red-700 border border-red-600 relative group"
            >
              <Icon name="mdi:play" class="w-4 h-4" fill="currentColor" />
              <span>Play Music</span>
              <!-- Tooltip -->
              <div
                class="absolute top-full mt-2 left-1/2 transform -translate-x-1/2 bg-gray-900 text-white text-sm rounded-lg px-3 py-2 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200 whitespace-nowrap pointer-events-none"
              >
                Enhance your shopping experience
                <div
                  class="absolute bottom-full left-1/2 transform -translate-x-1/2 w-0 h-0 border-l-4 border-r-4 border-b-4 border-transparent border-b-gray-900"
                >
                </div>
              </div>
            </button>
            <a
              href="#items"
              class="bg-blue-800 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors hidden sm:inline-block"
            >
              View Items
            </a>
          </div>
        </div>
      </div>
    </header>

    <!-- Audio Element -->
    <audio id="backgroundAudio" preload="metadata" loop>
      <source src="/house-sale-sheets/donki.mp3" type="audio/mpeg" />
      Your browser does not support the audio element.
    </audio>

    <!-- Hero Section -->
    <section class="bg-gradient-to-br from-blue-50 to-indigo-100 py-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
        <h2 class="text-4xl font-bold text-gray-900 mb-4">
          {siteContent.heroTitle}
        </h2>
        <p class="text-xl text-gray-600 mb-8 max-w-2xl mx-auto">
          {siteContent.heroSubtitle}
        </p>
        <div
          class="flex flex-col sm:flex-row gap-4 justify-center items-center"
        >
          <div class="flex items-center space-x-2 text-green-600">
            <Icon name="mdi:check-circle" class="w-5 h-5" fill="currentColor" />
            <span class="font-medium">All items available for viewing</span>
          </div>
          <div class="flex items-center space-x-2 text-green-600">
            <Icon name="mdi:check-circle" class="w-5 h-5" fill="currentColor" />
            <span class="font-medium">Cash or PayPal accepted</span>
          </div>
        </div>
      </div>
    </section>

    <!-- Filter Section -->
    <section class="py-8 bg-white" id="items">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex flex-wrap gap-2 justify-center">
          <button
            id="filter-all"
            class="filter-btn active bg-blue-900 text-white px-4 py-2 rounded-full border border-gray-300 text-sm font-medium hover:opacity-80 transition-colors"
          >
            All Items
          </button>
          {
            categories.map((category) => (
              <button
                id={`filter-${category.toLowerCase().replace(' ', '-')}`}
                class="filter-btn px-4 py-2 rounded-full border border-gray-300 text-sm font-medium hover:opacity-80 transition-colors"
              >
                {category}
              </button>
            ))
          }

          <label class="inline-flex items-center cursor-pointer ml-auto">
            <input
              type="checkbox"
              checked
              class="sr-only peer"
              id="filter-sold-items"
            />
            <div
              class="relative w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full rtl:peer-checked:after:-translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:start-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600 dark:peer-checked:bg-blue-600"
            >
            </div>
            <span class="ms-3 text-sm font-medium">Hide sold</span>
          </label>
        </div>
      </div>
    </section>

    <!-- Items Grid -->
    <section class="py-12">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
          id="items-grid"
        >
          {
            items.map((item, i) => (
              <div
                class={`item-card bg-white rounded-xl shadow-sm hover:shadow-md transition-shadow overflow-hidden ${item.sold ? 'hidden opacity-50 cursor-not-allowed' : ''}`}
                data-category={item.category.toLowerCase().replace(' ', '-')}
                data-sold={item.sold}
              >
                <div id="my-gallery">
                  {gallery[i].images.map((href, j) => {
                    const { width, height } = gallery[i].sizes[j];
                    return (
                      <a
                        class="aspect-w-16 aspect-h-12 bg-gray-200 cursor-pointer"
                        href={href}
                        data-cropped="true"
                        data-pswp-width={width}
                        data-pswp-height={height}
                        target="_blank"
                        hidden={j > 0}
                      >
                        <Image
                          src={href}
                          alt={item.name}
                          class="w-full h-48 object-cover"
                          width={width}
                          height={height}
                          loading="lazy"
                          referrerpolicy="no-referrer"
                        />
                      </a>
                    );
                  })}
                </div>

                <div class={`p-6`}>
                  <div class="flex justify-between items-start mb-2">
                    <h3 class={`text-lg font-semibold text-gray-900`}>
                      {item.name}
                    </h3>
                    <span class="text-2xl font-bold text-blue-800">
                      {item.price}
                    </span>
                  </div>
                  <div class="flex items-center space-x-4">
                    <span class="text-sm text-gray-500">{item.category}</span>
                    <span
                      class={`px-2 py-1 rounded-full text-xs font-medium ${
                        item.condition.toLowerCase() === 'excellent'
                          ? 'bg-green-100 text-green-800'
                          : item.condition.toLowerCase() === 'good'
                            ? 'bg-yellow-100 text-yellow-800'
                            : 'bg-orange-100 text-orange-800'
                      }`}
                    >
                      {item.condition}
                    </span>
                  </div>
                  {item.newProductUrl ? (
                    <Popover id="default-popover" trigger="View new product">
                      <LinkPreview id={item.newProductUrl} />
                    </Popover>
                  ) : (
                    <p class="h-12" />
                  )}
                  <button
                    class={`w-full bg-blue-800 text-white py-2 px-4 rounded-lg hover:bg-blue-700 transition-colors font-medium ${item.sold ? 'cursor-not-allowed opacity-50' : ''}`}
                    data-number={siteContent.whatsAppNumber}
                    disabled={item.sold}
                    id="inquire-button"
                  >
                    Inquire About Item
                  </button>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </section>

    <!-- Footer -->
    <footer class="bg-gray-800 text-gray-300 py-8">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center text-sm">
        <p>
          Last updated: {
            today.toLocaleDateString('en-US', {
              hour: '2-digit',
              month: 'long',
              day: 'numeric',
            })
          }
        </p>
        <p class="mt-2">
          Made with extra time at work by <a
            href="https://emasuriano.com/"
            class="underline cursor-pointer">EmaSuriano</a
          >
        </p>
      </div>

      <script>
        import JSConfetti from 'js-confetti';
        const jsConfetti = new JSConfetti();

        // Audio toggle functionality
        const audioToggle = document.getElementById('audioToggle')!;
        const backgroundAudio = document.getElementById(
          'backgroundAudio',
        ) as HTMLAudioElement;
        let isPlaying = false;

        const confettiMachine = () => {
          if (!isPlaying) return;
          jsConfetti
            .addConfetti({
              emojis: ['🏠', '🛋️', '🪑', '🛏️', '🖼️', '💸', '💰', '🎉', '✨'],
              emojiSize: 50,
            })
            .then(() => setTimeout(confettiMachine, 1000));
        };

        audioToggle.addEventListener('click', () => {
          if (isPlaying) {
            backgroundAudio.pause();
            audioToggle.innerHTML =
              '<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24"><path d="M8 5v14l11-7z"/></svg><span>Play Music</span>';
            isPlaying = false;
          } else {
            backgroundAudio
              .play()
              .then(confettiMachine)
              .catch(() => {
                console.log('Audio play failed - user interaction required');
              });
            audioToggle.innerHTML =
              '<svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24"><path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/></svg><span>Pause Music</span>';
            isPlaying = true;
          }
        });

        // Filter functionality
        const filterButtons = document.querySelectorAll('.filter-btn');
        const itemCards = document.querySelectorAll<HTMLElement>('.item-card');

        filterButtons.forEach((button) => {
          button.addEventListener('click', () => {
            // Update active button
            filterButtons.forEach((btn) =>
              btn.classList.remove('active', 'bg-blue-900', 'text-white'),
            );
            button.classList.add('active', 'bg-blue-900', 'text-white');

            // Get filter category
            const filter = button.id.replace('filter-', '');

            // Show/hide items
            itemCards.forEach((card) => {
              if (filter === 'all' || card.dataset.category === filter) {
                card.style.display = 'block';
              } else {
                card.style.display = 'none';
              }
            });
          });
        });

        // Item inquiry handling
        document
          .querySelectorAll('.item-card #inquire-button')
          .forEach((button) => {
            button.addEventListener('click', function (this: HTMLElement) {
              const itemCard = this.closest('.item-card')!;
              const itemName = itemCard.querySelector('h3')?.textContent;
              const itemPrice =
                itemCard.querySelector('.text-2xl')?.textContent;
              const body = encodeURIComponent(
                `Hey 👋 I'm interested in the ${itemName?.trim()} listed for ${itemPrice?.trim()}. Is it still available?`,
              );
              const number = this.dataset.number;

              if (!number) {
                return alert(
                  'WhatsApp number not found. Please contact us directly.',
                );
              }

              window.open(`https://wa.me/${number}?text=${body}`, '_blank');
            });
          });

        document
          .getElementById('filter-sold-items')!
          .addEventListener('change', function (this: HTMLInputElement) {
            itemCards.forEach((card) => {
              if (this.checked && card.dataset.sold === 'true') {
                card.style.display = 'none';
              } else {
                card.style.display = 'block';
              }
            });
          });
      </script>

      <script>
        import '../scripts/load-gallery.js';
      </script>
    </footer>
  </body>
</html>
